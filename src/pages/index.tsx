import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import { Navbar, Button, DarkThemeToggle } from "flowbite-react";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navbar
          fluid
          rounded
        >
          <Navbar.Brand href="/">
            <img
              alt="Flowbite React Logo"
              className="mr-3 h-6 sm:h-9"
              src="/logo.svg"
            />
            <span className="self-center whitespace-nowrap text-xl font-semibold dark:text-white">
              Transvid.io
            </span>
          </Navbar.Brand>
          <div className="flex md:order-2">
            <Button>
              Get started
            </Button>
            <Navbar.Toggle />
          </div>
          <Navbar.Collapse>
            <Navbar.Link
              active
              href="#"
            >
              <p>
                Home
              </p>
            </Navbar.Link>
            <Navbar.Link href="#">
              About
            </Navbar.Link>
            <Navbar.Link href="#">
              Services
            </Navbar.Link>
            <Navbar.Link href="#">
              Pricing
            </Navbar.Link>
            <Navbar.Link href="#">
              Contact
            </Navbar.Link>
          </Navbar.Collapse>
          <DarkThemeToggle />
        </Navbar>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
